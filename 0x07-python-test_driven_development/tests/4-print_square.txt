The ``4-print_square`` module
=============================

Using ``print_square``
----------------------

Test function import:
	>>> print_square = __import__("4-print_square").print_square

Test int argument passed:
	>>> print_square(4)
	####
	####
	####
	####

Test 10 passed:
	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

Test float arugment passed:
	>>> print_square(2.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Test zero passed:
	>>> print_square(0)

Test negative passed:
	>>> print_square(-15)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Test str passed:
	>>> print_square("string")
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

Test None passed:
        >>> print_square(None)
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

Test inf passed:
        >>> print_square(float("inf"))
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

Test missing arugument:
	>>> print_square()
	Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'
